<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JsHz&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.jshz.top/"/>
  <updated>2019-03-21T08:35:56.373Z</updated>
  <id>https://blog.jshz.top/</id>
  
  <author>
    <name>JsHz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>网络欺骗攻击</title>
    <link href="https://blog.jshz.top/2019/03/06/%E7%BD%91%E7%BB%9C%E6%AC%BA%E9%AA%97%E6%94%BB%E5%87%BB/"/>
    <id>https://blog.jshz.top/2019/03/06/网络欺骗攻击/</id>
    <published>2019-03-06T12:11:01.000Z</published>
    <updated>2019-03-21T08:35:56.373Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>计算机系统及网络的信息安全在越来越先进的社会中越来越凸显地位，在我国，这一问题已引起各方面的高度重视，在与入侵者周旋的过程中，有一种有效的信息安全技术正渐渐进入人们的视野中，这就是网络安全欺骗。<br><a id="more"></a></p><h4 id="0x1-ARP欺骗"><a href="#0x1-ARP欺骗" class="headerlink" title="0x1 ARP欺骗"></a>0x1 ARP欺骗</h4><p>ARP（地址解析协议）是在仅知道主机的IP地址是确定其物理地址的一种协议。局域网的网络流通不是根据IP进行，而是按照MAC地址进行传输。</p><p>比如局域网内 </p><p><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/web/arp.png" alt="Diagram"></p><h5 id="0x1-1（单向欺骗）"><a href="#0x1-1（单向欺骗）" class="headerlink" title="0x1.1（单向欺骗）"></a>0x1.1（单向欺骗）</h5><p><strong>A的地址为</strong>[IP：10.164.27.30 MAC：AA-AA-AA-AA-AA-AA]<br><strong>B的地址为</strong>[IP：10.164.27.40 MAC：BB-BB-BB-BB-BB-BB]<br><strong>C的地址为</strong>[IP：10.164.27.50 MAC：CC-CC-CC-CC-CC-CC]</p><p>A与C进行通信，但是B向A发送了一个自己伪造的 <strong>ARP应答</strong>，而这个应答中的数据为发送方，IP是 10.164.27.50（C的IP），MAC是BB-BB-BB-BB-BB-BB。（C的MAC本来是CC-CC-CC-CC-CC-CC，这里被伪造了）。当A接收到B的伪ARP应答是，就会更新本地缓存了（A就被欺骗了），B也变成 “C” 了。<br>A与C之间通信的数据就会经过B，B完全可以知道他们之间说了什么，这就是<strong>ARP</strong>欺骗过程。</p><p>掐断A与C之间的通信：<br>B向A发送一条ARP数据包，内容为：C的地址是00:00:00:00:00:00（一个错误的地址），但要注意了，这里只是 A发送给C中断了，C发送给A并没有中断，所以这个叫单向欺骗。</p><h4 id="0x1-2（双向欺骗）"><a href="#0x1-2（双向欺骗）" class="headerlink" title="0x1.2（双向欺骗）"></a>0x1.2（双向欺骗）</h4><p>A与C正常通信，然后B对A说我才是 C，又对C说我才是 A，这样把A和C的ARP缓存表全部修改了。以后的通信过程就是A把数据发给B，B再发送给C；C数据发送给B，B再发送给A。</p><h4 id="0x1-3-怎么应对ARP欺骗主机的情况？"><a href="#0x1-3-怎么应对ARP欺骗主机的情况？" class="headerlink" title="0x1.3 怎么应对ARP欺骗主机的情况？"></a>0x1.3 怎么应对ARP欺骗主机的情况？</h4><p>我们可以使用ARPkiller 的 “Sniffer 杀手” 扫描整个局域网IP段，然后查找处于 “混杂” 模式下的计算机，就可以发现对方了。<br>检测完成后，如果相应的IP是绿帽子图标，说明整个IP处于正常模式，如果是红帽子图标，则说明网卡处于混杂模式，它就是我们的目标，也就是他在用网络执法官捣乱。</p><h4 id="0x1-4-DNS欺骗"><a href="#0x1-4-DNS欺骗" class="headerlink" title="0x1.4 DNS欺骗"></a>0x1.4 DNS欺骗</h4><p>如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，用户上网就只能看到攻击者的主页，而不是自己想要取得的网页的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，只是冒名顶替，招摇撞骗罢了。</p><p>把攻击这的计算机设成目标域名的代理服务器。这样，外界进入目标的计算机的数据流在黑客的监视之下，黑客可以任意窃听甚至修改数据流里的数据，从而收集大量信息，和IP欺骗相似。</p><p>DNS无法在Internet上实现欺骗，只在局域网上有效果。</p><h4 id="0x1-5-Web欺骗"><a href="#0x1-5-Web欺骗" class="headerlink" title="0x1.5 Web欺骗"></a>0x1.5 Web欺骗</h4><p>Web是一种电子信息欺骗，也算障眼法，攻击者复制一个相似的网页与域名，如果眼神不好，在一个相似的网页输入隐私信息与个人账户和密码，就会被后台的黑客所截获到，从而信息泄露。</p><p>通常使用这种手段的有引诱，障眼，推荐链接。</p><p>实例:<br><strong>引诱</strong><br><a href="https://www.bilibili.com/" target="_blank" rel="noopener">全国最大交友网站，快，顶不住了！</a><br>填写你的信息,以获得大礼包一份<br>姓名：[    ]<br>性别：[    ]<br>住址：[    ]</p><p>不要轻易相信这些奇怪的字眼与网站</p><p><strong>障眼</strong><br>本来是 <a href="https://www.bing.com" target="_blank" rel="noopener">https://www.bing.com</a> 的域名，黑客可能会改成<a href="http://www.bing.top" target="_blank" rel="noopener">www.bing.top</a> 、 <a href="http://www.bimg.com" target="_blank" rel="noopener">www.bimg.com</a> 复制网页一份然后造成障眼，从而获取信息</p><p>在进入网页的时候要看到左下角的 js 提示网页，在进入网页的时候要注意有没有输错。</p><p><strong>推荐链接</strong><br>推荐链接一般来自好友之间和邮件</p><h4 id="0x1-6-网络钓鱼攻击的预防"><a href="#0x1-6-网络钓鱼攻击的预防" class="headerlink" title="0x1.6 网络钓鱼攻击的预防"></a>0x1.6 网络钓鱼攻击的预防</h4><p>在日常中预防钓鱼攻击，我们应该做到如下几点：</p><ol><li>不轻易在<strong>网上</strong>留下自己身份的任何资料，包括手<strong>机号码、身份号、银行号</strong></li><li>不要通过<strong>网络</strong>传输自己的隐私资料，包括<strong>手机号码、身份号、银行号</strong></li><li>不要轻易相信<strong>网上</strong>的信息，除非得到了权威的证明。否则千万不要相信别人所传播的谣言</li><li>不要在<strong>网站</strong>注册时透露自己的真实资料，例如，住址、电话、自己的银行卡号</li><li>如果涉及<strong>金钱交易和商业合同</strong>，不要仅仅通过<strong>网络</strong>完成，有心的骗子可能通过这种途径了解用户的资料。</li><li>不要轻易相信电子邮箱、<strong>网络论坛</strong>等发布的中奖信息、促销信息等，除非得到了另外途径的证明。因为正规的公司一般不会通过电子邮件给用户发送中奖信息和促销信息的。</li><li>对电脑进行<strong>网络安全</strong>防范措施。一是安装防火墙和防病毒软件，并经常升级。二是给系统打补丁，三是禁止浏览器运行<strong>Javascript 和 Active 代码</strong>，四是不要从网上下载<strong>未知来源的软件</strong>等。五是提高自我保护意识，不轻易连接公共场所的wifi和商业服务。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;计算机系统及网络的信息安全在越来越先进的社会中越来越凸显地位，在我国，这一问题已引起各方面的高度重视，在与入侵者周旋的过程中，有一种有效的信息安全技术正渐渐进入人们的视野中，这就是网络安全欺骗。&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://blog.jshz.top/categories/Blog/"/>
    
    
      <category term="Web" scheme="https://blog.jshz.top/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Windows注册表</title>
    <link href="https://blog.jshz.top/2019/03/04/Windows%E6%B3%A8%E5%86%8C%E8%A1%A8/"/>
    <id>https://blog.jshz.top/2019/03/04/Windows注册表/</id>
    <published>2019-03-04T02:06:09.000Z</published>
    <updated>2019-03-06T08:59:27.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在注册表，用户可以添加、删除、修改系统内的软件配置信息或硬件驱动程序，这样就大大方便提升了用户对软、硬件的工作状态进行相应调整。对于黑客来讲，注册表是他们发挥的最大用途之地，例如种植木马，删除硬件信息。<br><a id="more"></a></p><h4 id="0x1-注册表根项名称和作用"><a href="#0x1-注册表根项名称和作用" class="headerlink" title="0x1 注册表根项名称和作用"></a>0x1 注册表根项名称和作用</h4><table><thead><tr><th>根项名称</th><th>作用</th></tr></thead><tbody><tr><td>HKEY_LOCAL_MACHINE</td><td>包括关于本地计算机系统的信息，以及硬件和操作系统数据，如总线类型、系统内存、设备驱动程序和启动控制数据</td></tr><tr><td>HKEY_CLASSES_ROOT</td><td>包括由各种OLE技术使用的信息和文件类别关联数据。如果在”HKEY_CURRENT_USER\SOFTW ARE\Classes”中存在某个键或值，则对应键或值将出现在HKEY_CLASSES_ROOT中</td></tr><tr><td>HKEY_CURRENT_USER</td><td>包括当前登陆用户的配置文件，如环境变量、桌面设置、网络连接、打印机和程序首选项。这些信息与用户的配置文件相关联</td></tr><tr><td>HKEY_USERS</td><td>包括关于动态加载的用户配置文件和默认的配置文件的信息。这包含同时出现在HKEY_CURRENT_USER中的信息</td></tr><tr><td>HKEY_CURRENT_CONFIG</td><td>包含在启动时由本地计算机系统使用的硬件配置文件的相关信息</td></tr></tbody></table><p>虽然在注册表中5个根项看上去处于一种并列地位，彼此毫无关系。但事实上，<strong>HKEY_CLASSES_ROOT</strong> 和 <strong>HKEY_CURRENT_CONFIG</strong> 中存放的信息，都是<strong>HKEY_LOCAL_MACHINE</strong> 中存放的信息的一部分；而<strong>HKEY_CURRENT_USER</strong>中存放的信息，只是<strong>HKEY_USERS</strong>中存放的信息的一部分。<strong>HKEY_LOCAL_MACHINE</strong> 包括 <strong>HKEY_CLASSES_ROOT</strong> 和 <strong>HKEY_CURRENT_USER</strong> 中的所有信息。Windows 当前定义和使用的数据类型如表所示</p><h5 id="0x2-当前定义和使用的数据类型"><a href="#0x2-当前定义和使用的数据类型" class="headerlink" title="0x2 当前定义和使用的数据类型"></a>0x2 当前定义和使用的数据类型</h5><table><thead><tr><th>名称</th><th>数据类型</th><th>作用</th></tr></thead><tbody><tr><td>二进制</td><td>REG_BINARY</td><td>原始二进制数据，大多数硬件组件信息作为二进制数据存储，以十六进制的格式显示在注册表编辑器中</td></tr><tr><td>DWORD 值</td><td>DWORD</td><td>以4字节长（32位整数）的数字表示数据。设备驱动程序和服务的许多参数都是此类型，以二进制、十六进制、和十进制格式显示在注册表编辑器中。与之有关的值是DWORD_LITTLE_ENDIAN（最重要的字节在最低位地址）和REG_FWORD_BIG_ENDIAN（最不重要的字节在最高位地址）</td></tr><tr><td>可扩展字符串值</td><td>REG_EXPAND_SZ</td><td>长度可变的数据字符串，这种数据类型包括程序或服务使用该数据时解析的变量</td></tr><tr><td>多字符串值</td><td>REG_MULTI_SZ</td><td>包含用户可以阅读的列表或多个值，各条目之间用空格、逗号或其他标记分隔</td></tr><tr><td>字符串值</td><td>REG_SZ</td><td>长度固定的文本字符串</td></tr><tr><td>二进制值</td><td>REG_RESOURCE_LIST</td><td>为一系列嵌套的数组，用于存储硬件设备驱动程序或其他控制的某个物理设备所有使用的资源列表</td></tr><tr><td>二进制值</td><td>REG_RESOURCE_REQUIREMENTS_LIST</td><td>一系列嵌套的数组，用于存储一个设备驱动程序（或其控制的某个物理设备）可以使用的硬件资源列表</td></tr><tr><td>二进制值</td><td>REG_FULL_RESOURCE_DESCRIPTOR</td><td>一系列嵌套的数组，用于存储物理硬件设备使用的资源列表</td></tr><tr><td>无</td><td>REG_NONE</td><td></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;在注册表，用户可以添加、删除、修改系统内的软件配置信息或硬件驱动程序，这样就大大方便提升了用户对软、硬件的工作状态进行相应调整。对于黑客来讲，注册表是他们发挥的最大用途之地，例如种植木马，删除硬件信息。&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://blog.jshz.top/categories/Blog/"/>
    
    
      <category term="regedit" scheme="https://blog.jshz.top/tags/regedit/"/>
    
  </entry>
  
  <entry>
    <title>Netstat</title>
    <link href="https://blog.jshz.top/2019/03/04/Netstat%E8%AE%B0%E5%BD%95/"/>
    <id>https://blog.jshz.top/2019/03/04/Netstat记录/</id>
    <published>2019-03-04T02:06:09.000Z</published>
    <updated>2019-03-04T03:16:13.888Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>记录Netstat<br><a id="more"></a></p><h4 id="了解网络连接的Netstat命令"><a href="#了解网络连接的Netstat命令" class="headerlink" title="了解网络连接的Netstat命令"></a>了解网络连接的Netstat命令</h4><p>Netstat是一个监控<strong>TCP/IP</strong> 网络非常有用的工具，可以显示路由表、实际的网络连接，以及每一个网络接口的状态信息，从而知道哪些网络连接正在运作。</p><p>Netstat可显示与 <strong>IP</strong>、<strong>TCP</strong>、<strong>ICMP</strong> 协议相关的统计数据，一般用于检验本机端口的网络连接情况。</p><p>计算机有时候接收到的数据报导致出错数据或故障，对此不必感到奇怪，<strong>TCP/IP</strong> 可以容易允许这些类型的错误并自动重发数据报。但如果累计出错的数目占所接收到的IP数据报相当大的百分比，或者他的数目正在迅速增加，就应该使用Netstat查一查为什么会出现这些情况了。</p><p>一般用”netstat -na”命令来显示所有连接的端口并用数字表示。</p><h4 id="0x1-参数说明"><a href="#0x1-参数说明" class="headerlink" title="0x1 参数说明"></a>0x1 参数说明</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-a: 显示所有活动的 TCP 连接及连接计算机侦听的 TCP 端口和 UDP 端口。</span><br><span class="line">-e: 显示以太网 统计信息，如发送和接收的字节数、数据包数。</span><br><span class="line">-n: 显示活动的 TCP 连接，但只以数字形式表现地址和端口号，而不确定名称。</span><br><span class="line">-o: 显示活动的 TCP 连接并包括每个连接的进程ID(PID).可在Windows任务管理器 "进程" 选项卡上找到基于PID的应用程序。该参数可以与-a、-n和-p结合使用。</span><br><span class="line">-p: portocol:显示 Protocol 所指定的协议的连接。在这种情况下，Protocol 可以是 TCP、UDP、TCPV6或UDPV6。</span><br><span class="line">-s: 按协议显示统计信息。默认情况下，显示TCP、UDP、ICMP 和 IP协议的统计信息。</span><br><span class="line">-r: 显示 IP路由表 的内容。该参数与 route print 命令等价。</span><br><span class="line">Interval: 每隔 Interval 秒重新显示一次选定的信息。按 "Ctrl+C" 组合键可以停止重新显示统计信息。如果省略该参数，Netstat 将只打印一次选定的信息。</span><br></pre></td></tr></table></figure><p><strong>语法例子</strong>: <code>netstat [-a] [-e] [-n] [-o] [p Protocol] [-r] [-s]</code>  结合上面测试指令吧!!!👆</p><h4 id="0x2-典型示例"><a href="#0x2-典型示例" class="headerlink" title="0x2 典型示例"></a>0x2 典型示例</h4><p>Netstat 命令可显示活动的 <strong>TCP</strong> 连接、计算机侦听的端口、以太网统计信息、<strong>IP 路由表</strong>、<strong>IPV4</strong> 统计信息(对于<strong>IP、 ICMP、TCP 和 UDP 协议</strong>）以及<strong>IPV6</strong> 统计信息（对于<strong>IPV6</strong>、<strong>ICMPV6</strong>、通过 <strong>IPV6</strong> 的 TCP 以及通过 IPV6 的<strong>UDP协议</strong>)。使用时如果不带参数、Netstat将显示活动的 <strong>TCP</strong> 连接。</p><p>下面使用几个 Netstat 的命令的应用实例，如下<br>(1) 显示本机所有活动的 TCP 连接，以及计算机侦听的 TCP 和 UDP 端口，则输入”netstat -a” 命令。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">C</span>:\<span class="selector-tag">Users</span>\<span class="selector-tag">Administrator</span>&gt;<span class="selector-tag">netstat</span> <span class="selector-tag">-a</span></span><br><span class="line">活动连接</span><br><span class="line"> 协议 本地地址外部地址状态</span><br><span class="line"> <span class="selector-tag">TCP</span>  0<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-pseudo">:80</span>4<span class="selector-tag">L8NNGD38J28N3DNA</span><span class="selector-pseudo">:0</span> <span class="selector-tag">LISTENING</span></span><br></pre></td></tr></table></figure><p>(2)显示服务器活动的 TCP/IP 连接，则应输入 “<strong>netstat -n</strong>“ 命令或 “<strong>netstat</strong>“( 不带任何参数 ) 命令。</p><p>(3)显示以太网和所有协议的统计信息，则应输入 <strong>“netstat -s -e</strong>“ 命令。</p><p>(4)检查路由表确认路由配置i情况，则应输入 “<strong>netstat -rn</strong>“ 命令</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;记录Netstat&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://blog.jshz.top/categories/Blog/"/>
    
    
      <category term="TCP/IP" scheme="https://blog.jshz.top/tags/TCP-IP/"/>
    
  </entry>
  
  <entry>
    <title>工作组和域的Net命令</title>
    <link href="https://blog.jshz.top/2019/03/04/%E5%B7%A5%E4%BD%9C%E7%BB%84%E5%92%8C%E5%9F%9F%E7%9A%84%20Net%20%E5%91%BD%E4%BB%A4/"/>
    <id>https://blog.jshz.top/2019/03/04/工作组和域的 Net 命令/</id>
    <published>2019-03-04T02:06:09.000Z</published>
    <updated>2019-03-05T03:10:24.994Z</updated>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>记录Net命令的学习过程<br><a id="more"></a></p><h4 id="0x1-Net命令介绍"><a href="#0x1-Net命令介绍" class="headerlink" title="0x1 Net命令介绍"></a>0x1 Net命令介绍</h4><p>Net 命令是一种基于网络的命令，包括了管理网络环境、服务、用户、登陆等大部分重要的管理功能。常见的 <strong>Net</strong> 子命令有 <strong>net view、net user、net use、net start、net stop、net share</strong>等，下面来一一介绍嗷。</p><h4 id="1x1-net-view"><a href="#1x1-net-view" class="headerlink" title="1x1 net view"></a>1x1 net view</h4><p>作用：显示域列表、计算机列表或指定计算机的共享资源列表。<br>命令格式：<code>net view [\\ComputerName] [/domain[:DomainName]]</code></p><blockquote><p>\\Computer: 指定要查看其共享资源的计算机名称。<br>/domain[:Domainname]: 指定要查看其可用计算机的域</p></blockquote><p>输入不带参数的 net view，就会显示当前域的计算机列表。<br>实例:<code>net view 127.0.0.1</code></p><h4 id="1x2-net-user"><a href="#1x2-net-user" class="headerlink" title="1x2 net user"></a>1x2 net user</h4><p>作用：添加或更改用户账号或显示用户账号信息。该命令也可以写为 net users。<br>命令格式：net user Administrator Administrator 修改已有账号信息<br>输入不带参数的 net user:查看计算机上的用户账号列表。</p><h4 id="1x3-net-use"><a href="#1x3-net-use" class="headerlink" title="1x3 net use"></a>1x3 net use</h4><p>作用：连接计算机或者断开计算机的共享资源连接，或显示计算机的连接方式</p><p>参数介绍：输入不带参数的 net use 查看网络连接</p><h4 id="1x4-net-start"><a href="#1x4-net-start" class="headerlink" title="1x4 net start"></a>1x4 net start</h4><p>作用：启动服务或显示已启动服务的列表<br>实例：net start server<br>不带参数则显示已启动服务</p><h4 id="1x5-net-stop"><a href="#1x5-net-stop" class="headerlink" title="1x5 net stop"></a>1x5 net stop</h4><p>作用与上面的 net start 相反</p><h4 id="1x6-net-share"><a href="#1x6-net-share" class="headerlink" title="1x6 net share"></a>1x6 net share</h4><p>作用：创建、删除或显示共享资源。<br>不带任何参数的 net share 命令： 显示本地计算机上所有共享资源的信息<br>详细请看下面👇<br>Sharename: 共享资源的网络名称<br>drive:path: 指定共享目录的绝对路径。<br>/user:number: 设置可以同时访问共享资源的最大用户数。<br>/unlimited: 不限制同时访问共享资源的用户数。<br>/remark:”test”: 添加关于资源的注释，注释文字用引号引住。</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;p&gt;记录Net命令的学习过程&lt;br&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://blog.jshz.top/categories/Blog/"/>
    
    
      <category term="net" scheme="https://blog.jshz.top/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>Hexo本地服务器创建</title>
    <link href="https://blog.jshz.top/2019/02/18/%E5%86%85%E7%BD%91hexo/"/>
    <id>https://blog.jshz.top/2019/02/18/内网hexo/</id>
    <published>2019-02-18T02:53:35.000Z</published>
    <updated>2019-02-18T06:52:37.929Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>想方便的设置局域网的个人博客嘛，比设置公网的个人博客简单实用，但还是放个链接吧👇<br><a href="https://blog.jshz.top/2018/01/20/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E7%BB%8F%E9%AA%8C/">设置公网个人博客</a><a id="more"></a></p><h5 id="0x1-需要的软件"><a href="#0x1-需要的软件" class="headerlink" title="0x1 需要的软件"></a>0x1 需要的软件</h5><blockquote><p>需要使用的工具:<br><br><a target="self" href="http://nodejs.cn/download">node.js</a><br><br><a target="self" href="http://www.git-scm.com/download">git bash</a><br><br>Hexo</p></blockquote><h5 id="0x2-创建过程"><a href="#0x2-创建过程" class="headerlink" title="0x2 创建过程"></a>0x2 创建过程</h5><p>打开GitBash，进入你想要存放博客的文件夹，安装Hexo插件:<code>npm install hexo -g</code></p><p>然后初始化文件夹:<code>hexo init</code></p><p>开始下载yilia的主题(主题可选，都行的)：<code>git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia</code>，然后打开站点根目录的_config.yml，找到theme，把原来的主题修改成yilia。</p><p>输入<code>hexo clean</code>清楚内存、<code>hexo g</code>更新本地、<code>hexo server -i IP</code>设置你的局域网IP<br>完成。</p><p>创建文章：打开GitBash，进入你的站点根目录，输入：<code>hexo new page</code>，就会新建一篇文章，也可以自己在站点根目录文件夹打开source，然后进入_posts新建一个page.md写入文章。</p><h4 id="0x03-番外篇"><a href="#0x03-番外篇" class="headerlink" title="0x03 番外篇"></a>0x03 番外篇</h4><p>个人推荐编写文章的编译器:<a href="http://markdownpad.com/" target="_blank" rel="noopener">Markdown</a>    、<a href="http://markdown.xiaoshujiang.com/" target="_blank" rel="noopener">小书匠</a></p><p>优化与美化可以看<a href="https://www.jianshu.com/p/f389ad8c49bd" target="_blank" rel="noopener">DevinZ的</a>，这里就不介绍了。</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;想方便的设置局域网的个人博客嘛，比设置公网的个人博客简单实用，但还是放个链接吧👇&lt;br&gt;&lt;a href=&quot;https://blog.jshz.top/2018/01/20/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E7%BB%8F%E9%AA%8C/&quot;&gt;设置公网个人博客&lt;/a&gt;
    
    </summary>
    
      <category term="Blog" scheme="https://blog.jshz.top/categories/Blog/"/>
    
    
      <category term="Hexo" scheme="https://blog.jshz.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Linux系统管理</title>
    <link href="https://blog.jshz.top/2019/02/13/Linux%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86/"/>
    <id>https://blog.jshz.top/2019/02/13/Linux文件管理/</id>
    <published>2019-02-13T06:27:54.000Z</published>
    <updated>2019-02-19T01:21:59.042Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>在linux中的每一个文件或目录都包括有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。<br><a id="more"></a></p><h5 id="0x1-过程"><a href="#0x1-过程" class="headerlink" title="0x1 过程"></a>0x1 过程</h5><p>r(Read - 读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限<br>w(Write - 写入)：对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。<br>x(eXecute - 执行)：对文件而言，具有执行文件的权限；对目录来说该用户具有进入目录的权限。</p><p>  <strong>-(表示不具有该项的权限)</strong></p><h6 id="0x2-权限举例"><a href="#0x2-权限举例" class="headerlink" title="0x2 权限举例"></a>0x2 权限举例</h6><p>-rwx——：文件所有这对文件具有读取、写入和执行的权限。<br>-rw-rw-r-x：文件所有这与同组用户对文件具有读写的权限，而其他用户仅具有读取和执行的权限。<br>drwx–x–x：目录所有着具有读写与进入目录的权限、其他用户可以进入该目录，却无法读取任何数据。<br>Drwx——：除了目录所有者具有完整的权限之外，其他用户对该目录完全没有任何权限。</p><h6 id="0x3-特殊权限"><a href="#0x3-特殊权限" class="headerlink" title="0x3 特殊权限"></a>0x3 特殊权限</h6><p>文件目录权限不止这些，还有所谓的特殊权限。由于特殊权限会拥有一些“特权”，因为用户若无特殊需求，不应该启用这些权限，避免安全方面出现严重漏洞，造成黑客入侵，甚至摧毁系统！！！</p><ul><li><p>s或S(SUID, Set UID)：可执行的文件搭配这个权限，便能获得特权，任意获取该文件的所有者能使用的全部系统资源。所以请注意拥有SUID权限的文件，<strong>SUID配root</strong>，那就是黑客的<strong>任意门</strong></p></li><li><p>s或S(SGID, Set GIT)：设置在文件上面，<strong>其效果与SUID相同</strong>，只不过将文件所有者换成用户组，该文件就可以任意存取整个用户组所能使用的系统资源。</p></li><li><p>t或T(Sticky)：/tmp和/var/tmp目录共所有用户暂时存取文件，就是<strong>每位用户皆拥有完整的权限</strong>进入该目录，去浏览、删除和移动文件。</p></li></ul><p>对于特殊权限，最好不要设置，不然会带来很严重的安全问题。<br>当然，在这里你也可以改变文件和目录的所有者和所有属。</p><h6 id="0x4-详细权限说明"><a href="#0x4-详细权限说明" class="headerlink" title="0x4 详细权限说明"></a>0x4 详细权限说明</h6><p>文件和目录的权限表示，使用rwx这三个字符来代表所有者、用户组和其他用户的权限。有时候，字符似乎过于麻烦，因此还有另外一种方法就是以数学来表示权限，而且仅需三个数字。</p><blockquote><p>r：对应数值4<br>w：对应数值2<br>x：对应数值1<br>-：对应数值0</p></blockquote><p>数字设定的关键是mode的取值，一开始许多初学者会被搞糊涂，其实很简单，我们将rwx看成<strong>二进制数</strong>，如果有则有1表示，没有则有0表示，那么rwx r-x r–则可以表示成为：<br>111 101 100<br>再将其每三位转换成为一个十进制数，就是754.<br>例如，我们想让a.txt这个文件的权限为：</p><blockquote><p>自己 同组用户 其他用户<br>可读 是 是 是<br>可写 是 是<br>可执行</p></blockquote><p>那么，我们先根据上表得到权限串为：rw-rw-r–， 那么转换成二进制数就是110 110 100， 再每三位转换成为一个十进制数，就得到664，因此我们执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost~]# chmod 666 a.txt</span><br></pre></td></tr></table></figure><p>按照上面的规则，rwx合起来就是4 + 2 + 1 = 7，一个rwxrwxrwx权限全开放的文件，数值表示为777；而完全不开放权限的文件 “- - - - - - - - -“ 其数字表示为000。</p><hr><h5 id="教程转载panyun-有修改"><a href="#教程转载panyun-有修改" class="headerlink" title="教程转载panyun(有修改)"></a>教程转载panyun(有修改)</h5><p><strong>若有侵权，请<a href="&quot;http://wpa.qq.com/msgrd?v=3&amp;uin=1391299672&amp;site=qq&amp;menu=yes">联系我</a>，我会立刻删除</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;在linux中的每一个文件或目录都包括有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.jshz.top/categories/Hexo/"/>
    
    
      <category term="Linux" scheme="https://blog.jshz.top/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>优化与美化</title>
    <link href="https://blog.jshz.top/2019/02/07/%E4%BC%98%E5%8C%96%E4%B8%8E%E7%BE%8E%E5%8C%96/"/>
    <id>https://blog.jshz.top/2019/02/07/优化与美化/</id>
    <published>2019-02-07T05:37:16.000Z</published>
    <updated>2019-02-19T02:27:05.792Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。<br><a id="more"></a></p><h4 id="这里借鉴了几个例子"><a href="#这里借鉴了几个例子" class="headerlink" title="这里借鉴了几个例子"></a>这里借鉴了几个例子</h4><ul><li><h6 id="Alvabill-NexT博客全优化与美化"><a href="#Alvabill-NexT博客全优化与美化" class="headerlink" title="Alvabill-NexT博客全优化与美化"></a><strong><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">Alvabill-NexT博客全优化与美化</a></strong></h6></li><li><h6 id="个性化NexT主题美化"><a href="#个性化NexT主题美化" class="headerlink" title="个性化NexT主题美化"></a><strong><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">个性化NexT主题美化</a></strong></h6></li><li><h6 id="wenbo星空–NexT主题美化"><a href="#wenbo星空–NexT主题美化" class="headerlink" title="wenbo星空–NexT主题美化"></a><strong><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">wenbo星空–NexT主题美化</a></strong></h6>(我的主题NexT的美化)</li><li><h6 id="yalia主题优化与美化"><a href="#yalia主题优化与美化" class="headerlink" title="yalia主题优化与美化"></a><strong><a href="https://www.jianshu.com/p/f389ad8c49bd" target="_blank" rel="noopener">yalia主题优化与美化</a></strong></h6></li><li><h6 id="yalia主题添加阅读量"><a href="#yalia主题添加阅读量" class="headerlink" title="yalia主题添加阅读量"></a><strong><a href="https://www.yanchezuo.com/hexo-2.html" target="_blank" rel="noopener">yalia主题添加阅读量</a></strong></h6></li><li><h6 id="NexT主题添加背景动态线条"><a href="#NexT主题添加背景动态线条" class="headerlink" title="NexT主题添加背景动态线条"></a><strong><a href="http://shenzekun.cn/hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.html" target="_blank" rel="noopener">NexT主题添加背景动态线条</a></strong></h6></li></ul><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>总配置是blog\_config,而主题配置在blog\themes\主题\_config!</p><p>主题配置在theme/next/_config里面</p><hr><p>个人觉得yalia主题很好看，自己的博客稀里糊涂的使用了NexT主题搭建，到时候应该也会改成yalia主题的！</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.jshz.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.jshz.top/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>初创博客经验</title>
    <link href="https://blog.jshz.top/2018/01/20/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E7%BB%8F%E9%AA%8C/"/>
    <id>https://blog.jshz.top/2018/01/20/创建博客踩坑经验/</id>
    <published>2018-01-20T12:41:08.000Z</published>
    <updated>2019-02-19T02:27:38.396Z</updated>
    
    <content type="html"><![CDATA[<h5 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h5><p>很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久<s>(但后来还是上线了嘛)</s></p><a id="more"></a><font face="黑体" color="#000000" size="5">博客创建过程(windows)</font><p>本咸鱼是使用hexo + github搭建的博客,踩坑过多，故出此与记。</p><p>(会的大佬可以直接跳过)</p><blockquote><p>需要使用的工具:<br><br><a target="self" href="http://nodejs.cn/download">node.js</a><br><br><a target="self" href="http://www.git-scm.com/download">git bash</a><br><br>Hexo</p></blockquote><h5 id="大概过程"><a href="#大概过程" class="headerlink" title="大概过程"></a>大概过程</h5><ol><li>注册github账号，然后创建仓库</li><li>获得ssh，并且使用github账号连接上ssh</li><li>安装hexo,并创建hexo init目录,</li><li>设置hexo与github关联</li><li>上线博客</li></ol><p><strong>注册githut账号，创建仓库</strong><br>(图不一样，仅供参考)</p><p>进入<a target="self" href="https://www.github.com">github</a>官网,注册与登陆账号后，新建一个仓库 <code>create a repository</code><br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/新建仓库.png" alt="enter description here"><br>仓库名字要和用户名正确,例如我的是jshz,仓库名字就是<code>jshz.github.io</code><br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/新建仓库1.png" alt="enter description here"></p><h6 id="gitbash设置Github账号、邮箱、ssh-key连接"><a href="#gitbash设置Github账号、邮箱、ssh-key连接" class="headerlink" title="gitbash设置Github账号、邮箱、ssh key连接"></a><strong>gitbash设置Github账号、邮箱、ssh key连接</strong></h6><h5 id="账号、邮箱"><a href="#账号、邮箱" class="headerlink" title="账号、邮箱"></a>账号、邮箱</h5><p>打开Git Bash,填写账号信息,输入 <code>git config --global user.name &quot;yourname&quot;</code>(xxx代表你的用户名)<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/登陆账号.png" alt="enter description here"></p><p>接下来输入<code>git config --global uesr.email &quot;yourname@example.com&quot;</code>(填写你注册时候的邮箱)![enter <img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/登陆邮箱.png" alt="enter description here"></p><h5 id="ssh-key"><a href="#ssh-key" class="headerlink" title="ssh key"></a>ssh key</h5><p>查看C:\Users\用户 是否有 <code>.ssh</code>，如果有，就备份后删除。</p><p>打开GitBash输入<code>ssh key-gen -t rsa -C &quot;yourname@example.com&quot;</code> 生成密钥，后面出现的三个问题都回车。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/创建ssh密钥.png" alt="enter description here"></p><p>后面得到两个文件: id_rsa和id_rsa.pub, 打开id_rsa.pub文件, 复制里面的内容。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/创建ssh密钥1.png" alt="enter description here"></p><p>打开<a href="https://www.github.com" target="_blank" rel="noopener">github</a>, 登陆你的账号，点击右上角的下箭头，选择<strong>setting</strong>,找到<strong>SSH and GPG keys</strong>,点击<strong>New SSH key</strong>。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/设置sshkey.png" alt="enter description here"><br><strong>提示</strong>:添加ssh后，如果不知道ssh是否添加，可以在Git bash使用<code>ssh -t git@github.com</code>测试ssh是否成功添加,如果显示Hi,则代表你成功添加。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/验证ssh是否成功.png" alt="enter description here"></p><blockquote><p><strong>waring!!</strong><br>如果没有显示这则消息，那得重新弄一遍了。<br>在这之前，先把C:\User\用户 的.ssh删除。<br>github上的ssh密钥也需要清除。<br>接下来回到第二步–&gt;ssh</p></blockquote><h5 id="安装、创建hexo目录、上线博客"><a href="#安装、创建hexo目录、上线博客" class="headerlink" title="安装、创建hexo目录、上线博客"></a>安装、创建hexo目录、上线博客</h5><p>打开Git Bash, 进入你想要创建博客的文件夹位置, 例如 <code>cd d:/blog</code>,输入<code>npm install hexo -g</code>，开始安装hexo(这里本机已有hexo),输入 <code>hexo init</code>,开始初始化文件夹。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/%E5%88%9D%E5%88%9B%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BAhexo.png" alt="enter description here"></p><p>完事之后，安装部署扩展 <code>npm install hexo-deployer-git --save</code><br>打开<code>d:\blog\_config</code>(配置文件)，找到deploy，修改配置如下:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line"><span class="attribute">type</span>: git</span><br><span class="line"><span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Luxonext/LwJ.git<span class="comment">//这个看下面</span></span><br><span class="line"><span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>repo不用写入上面那行，因为这个是别人的，要填写应该填写你自己的仓库地址。(个人推荐ssh，但需要你的本机ssh与github账户连接才行！)<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/自己的repo.png" alt="enter description here"></p><p>填写好后，我们可以先预览一下博客<code>hexo s</code>，没有大碍后可以写入public <code>hexo g</code></p><p>然后上线博客<code>hexo d</code><br><strong>优化与美化</strong>会在下一篇写出。</p>]]></content>
    
    <summary type="html">
    
      &lt;h5 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h5&gt;&lt;p&gt;很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久&lt;s&gt;(但后来还是上线了嘛)&lt;/s&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://blog.jshz.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://blog.jshz.top/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://blog.jshz.top/tags/NexT/"/>
    
  </entry>
  
</feed>
