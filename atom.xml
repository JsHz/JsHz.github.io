<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JsHz&#39;s Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jshz.github.io/"/>
  <updated>2019-02-12T08:39:04.837Z</updated>
  <id>https://jshz.github.io/</id>
  
  <author>
    <name>JsHz</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mysql攻防与加固</title>
    <link href="https://jshz.github.io/2019/02/12/Mysql%E6%94%BB%E9%98%B2%E4%B8%8E%E5%8A%A0%E5%9B%BA/"/>
    <id>https://jshz.github.io/2019/02/12/Mysql攻防与加固/</id>
    <published>2019-02-12T07:12:12.000Z</published>
    <updated>2019-02-12T08:39:04.837Z</updated>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>此文章为本学校的题目，故只于同学观看。<br><a id="more"></a></p><h5 id="实验机器用户与密码如下"><a href="#实验机器用户与密码如下" class="headerlink" title="实验机器用户与密码如下"></a>实验机器用户与密码如下</h5><p>H-Xcilent–2主机<br>==用户:root 密码:123456==<br>H-Xserver-mysql–1主机<br>==用户:root 密码:123456==</p><h5 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h5><p>第一步、 进入拓扑<br>ip地址可以通过拓扑获得，获得不了的话，可以进入系统使用ifconfig 获得。<br>第二步、启动xserver-mysql，xclient.进入xserver-mysql,开始实验，实验步骤如下:</p><ol><li><p><strong>进入xserver-mysql，加固mysql 服务器，使得所有的访问能审计，要求通过对mysqld 的启动项进行加固，把加固部分截屏</strong></p></li><li><p><strong>配置linux-mysql 防火墙，允许mysql服务器能够被访问，要求规则中只包含端口项，防火墙规则列表截屏</strong></p></li><li><p><strong>进入xserver-mysql， 查看所有用户及权限，找到可以从任何IP地址访问的用户</strong></p></li><li><p><strong>对上述漏洞进行加固，设定该用户只能从学生机访问，用grants 命令进行管理，并将加固过程截屏</strong></p></li><li><p><strong>检查xserver-mysql中的是否存在匿名用户，如果存在匿名用户，则加固删除，将执行加固命令截屏</strong></p></li><li><p><strong>改变默认mysql管理员的名称，将系统的默认管理员从root改为admin.防止被列举，将执行加固命令截屏</strong></p></li><li><p><strong>数据库安全加固操作：禁止Mysql对本地文件存取，对mysqld 的启动项进行加固，把加固部分截屏</strong></p></li><li><p><strong>数据库安全加固操作：限制一般用户浏览其他用户数据库，对mysqld 的启动项惊醒加固，把加固部分截屏</strong></p></li><li><p><strong>提交实验报告，内容包含以上个操作步骤的相关证据文件。</strong></p></li></ol><p>第三步、实验结束，关闭虚拟机</p><hr><h5 id="实验答案"><a href="#实验答案" class="headerlink" title="实验答案"></a>实验答案</h5><ul><li>进入xserver-mysql,加固mysql 服务器，使得所有的访问能审计，要求通过对mysqld 的启动项进行加固，把加固部分截屏。</li></ul><p>在xserver-mysql主机上，进入/etc目录，编辑my.cnf文件，添加内容如下</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">old_passwords</span>=<span class="number">1</span></span><br><span class="line"><span class="attr">log</span>=/var/log/mysql/access.log //新写入的</span><br><span class="line"><span class="section">[mysql.server]</span></span><br></pre></td></tr></table></figure><p> 1.<strong>重启mysqld</strong><br> 2.<strong>配置linux-mysql 防火墙，允许Mysql服务能够被访问，要求规则中之包含端口项，防火墙规则列表截屏</strong></p><p> <strong>解答步骤</strong>：</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -<span class="keyword">L</span> <span class="keyword">INPUT</span></span><br><span class="line">iptables -I <span class="keyword">INPUT</span> -p tcp --dport 3306 -j ACCEPT</span><br></pre></td></tr></table></figure><p>3.<strong>进入xserver-mysql，查看所有用户及权限，找到可以从任何IP地址访问的用户</strong></p><p><strong>解答步骤</strong>：</p><p>用mysql命令登陆mysql数据库，然后用use mysql，选定mysql数据库，然后再用命令select host,user from user；查看哪个用户可以从任何地方连接到数据库。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line">use mysql;</span><br><span class="line">selece host,<span class="keyword">user</span> <span class="title">from</span> user;</span><br></pre></td></tr></table></figure><p>可以看出， test用户可以从任何地方连接到数据库。</p><p>4.<strong>对上述漏洞惊醒加固，设定该用户只能从学生机访问，用grants命令进行管理，并将加固过程截屏。</strong></p><p><strong>解答步骤</strong>：</p><p>查看学生机的IP地址，打开学生机的cmd命令窗口，用<code>ipconfig</code>查看IP。</p><p>在xserver-mysql主机，添加策略规则，只允许test用户从学生机上访问mysql数据库。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line"><span class="keyword">use</span> mysql;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> *.* <span class="keyword">to</span> <span class="keyword">test</span>@IP identfied <span class="keyword">by</span> <span class="string">""</span>;</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>;</span><br></pre></td></tr></table></figure><p>5.<strong>检查xserver-mysql中的是否存在匿名用户，如果存在匿名用户，则加固删除，将执行加固命令截屏</strong></p><p><strong>解答步骤</strong>：</p><p>检查是否存在匿名用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> host,<span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">""</span>;</span><br></pre></td></tr></table></figure><p>可以看出，有两个匿名用户。</p><p>然后删除匿名用户。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">user</span> <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> <span class="keyword">user</span>=<span class="string">""</span>;</span><br><span class="line">selece host,user from user where user="";</span><br></pre></td></tr></table></figure><p>6.<strong>改变默认mysql管理员的名称，将系统的默认管理员从root 改为admin， 防止被列举，将执行加固命令截屏</strong></p><p>进入mysql数据库，执行命令将root改成admin。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql</span><br><span class="line"><span class="keyword">use</span> mysql；</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">use</span> <span class="keyword">set</span> <span class="keyword">user</span>=“<span class="keyword">admin</span>” <span class="keyword">where</span> <span class="keyword">user</span>=“root“；</span><br><span class="line"><span class="keyword">flush</span> <span class="keyword">privileges</span>；</span><br></pre></td></tr></table></figure><p>7.<strong>数据库安全加固操作：禁止MySQL对本地文件存取，对mysqld 的启动项进行加固，把加固部分截屏</strong></p><p><strong>解答步骤</strong>：</p><p>进入xserver-mysql主机的/etc目录，编辑my.cnf，如下：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">old_paaawords=</span>1</span><br><span class="line"><span class="string">log=</span>/<span class="string">var/</span><span class="string">log/</span><span class="string">mysql/</span><span class="string">access.</span><span class="string">log</span></span><br><span class="line"><span class="string">set-</span><span class="string">variable=</span><span class="string">local-infile=</span>0 //新写入的</span><br></pre></td></tr></table></figure><p>重启mysqld服务</p><p>8.<strong>数据库安全加固操作：限制一般用户浏览其他用户的数据库，对mysqld的启动项进行加固，把加固部分截屏</strong></p><p>进入xserver-mysql主机的/etc 目录， 编辑my.cnf， 如下：</p><figure class="highlight dsconfig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">old_paaawords=</span>1</span><br><span class="line"><span class="string">log=</span>/<span class="string">var/</span><span class="string">log/</span><span class="string">mysql/</span><span class="string">access.</span><span class="string">log</span></span><br><span class="line"><span class="string">set-</span><span class="string">variable=</span><span class="string">local-infile=</span>0</span><br><span class="line"><span class="string">skip-show-</span><span class="string">database </span>//新写入的</span><br></pre></td></tr></table></figure><p>最后，重启mysqld服务</p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;此文章为本学校的题目，故只于同学观看。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jshz.github.io/categories/Hexo/"/>
    
    
      <category term="1. Mysql" scheme="https://jshz.github.io/tags/1-Mysql/"/>
    
  </entry>
  
  <entry>
    <title>优化与美化</title>
    <link href="https://jshz.github.io/2019/02/07/%E4%BC%98%E5%8C%96%E4%B8%8E%E7%BE%8E%E5%8C%96/"/>
    <id>https://jshz.github.io/2019/02/07/优化与美化/</id>
    <published>2019-02-07T05:37:16.000Z</published>
    <updated>2019-02-10T17:10:39.898Z</updated>
    
    <content type="html"><![CDATA[<center><font face="黑体" color="#000000" size="6">优化与美化</font><br></center><h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。<br><a id="more"></a></p><h4 id="这里借鉴了几个例子"><a href="#这里借鉴了几个例子" class="headerlink" title="这里借鉴了几个例子"></a>这里借鉴了几个例子</h4><ul><li><h6 id="Alvabill-NexT博客全优化与美化"><a href="#Alvabill-NexT博客全优化与美化" class="headerlink" title="Alvabill-NexT博客全优化与美化"></a><strong><a href="https://www.jianshu.com/p/1f8107a8778c" target="_blank" rel="noopener">Alvabill-NexT博客全优化与美化</a></strong></h6></li><li><h6 id="个性化NexT主题美化"><a href="#个性化NexT主题美化" class="headerlink" title="个性化NexT主题美化"></a><strong><a href="http://shenzekun.cn/hexo%E7%9A%84next%E4%B8%BB%E9%A2%98%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">个性化NexT主题美化</a></strong></h6></li><li><h6 id="wenbo星空–NexT主题美化"><a href="#wenbo星空–NexT主题美化" class="headerlink" title="wenbo星空–NexT主题美化"></a><strong><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">wenbo星空–NexT主题美化</a></strong></h6>(我的主题NexT的美化)</li><li><h6 id="yalia主题优化与美化"><a href="#yalia主题优化与美化" class="headerlink" title="yalia主题优化与美化"></a><strong><a href="https://www.jianshu.com/p/f389ad8c49bd" target="_blank" rel="noopener">yalia主题优化与美化</a></strong></h6></li><li><h6 id="yalia主题添加阅读量"><a href="#yalia主题添加阅读量" class="headerlink" title="yalia主题添加阅读量"></a><strong><a href="https://www.yanchezuo.com/hexo-2.html" target="_blank" rel="noopener">yalia主题添加阅读量</a></strong></h6></li><li><h6 id="NexT主题添加背景动态线条"><a href="#NexT主题添加背景动态线条" class="headerlink" title="NexT主题添加背景动态线条"></a><strong><a href="http://shenzekun.cn/hexo%E5%A6%82%E4%BD%95%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%83%8C%E6%99%AF.html" target="_blank" rel="noopener">NexT主题添加背景动态线条</a></strong></h6></li></ul><h4 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h4><p>总配置是blog\_config,而主题配置在blog\themes\主题\_config!</p><hr><p>个人觉得yalia主题很好看，自己的博客稀里糊涂的使用了NexT主题搭建，到时候应该也会改成yalia主题的！</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font face=&quot;黑体&quot; color=&quot;#000000&quot; size=&quot;6&quot;&gt;优化与美化&lt;/font&gt;&lt;br&gt;&lt;/center&gt;

&lt;h4 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h4&gt;&lt;p&gt;总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。&lt;br&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jshz.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jshz.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>初创博客经验</title>
    <link href="https://jshz.github.io/2018/01/20/%E5%88%9B%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%B8%A9%E5%9D%91%E7%BB%8F%E9%AA%8C/"/>
    <id>https://jshz.github.io/2018/01/20/创建博客踩坑经验/</id>
    <published>2018-01-20T12:41:08.000Z</published>
    <updated>2019-02-11T06:55:21.114Z</updated>
    
    <content type="html"><![CDATA[<center><font face="黑体" color="#000000" size="6">初创博客</font><br></center>    <font face="黑体" color="#000000" size="5">前言</font><p>很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久<s>(但后来还是上线了嘛)</s></p><a id="more"></a><font face="黑体" color="#000000" size="5">博客创建过程(windows)</font><p>本咸鱼是使用hexo + github搭建的博客,踩坑过多，故出此与记。</p><p>(会的大佬可以直接跳过)</p><blockquote><p>需要使用的工具:<br><br><a target="self" href="http://nodejs.cn/download">node.js</a><br><br><a target="self" href="http://www.git-scm.com/download">git bash</a><br><br>Hexo</p></blockquote><h4 id="大概过程"><a href="#大概过程" class="headerlink" title="大概过程"></a>大概过程</h4><ol><li>注册github账号，然后创建仓库</li><li>获得ssh，并且使用github账号连接上ssh</li><li>安装hexo,并创建hexo init目录,</li><li>设置hexo与github关联</li><li>上线博客</li></ol><p><strong>注册githut账号，创建仓库</strong><br>(图不一样，仅供参考)</p><p>进入<a target="self" href="https://www.github.com">github</a>官网,注册与登陆账号后，新建一个仓库 <code>create a repository</code><br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/新建仓库.png" alt="enter description here"><br>仓库名字要和用户名正确,例如我的是jshz,仓库名字就是<code>jshz.github.io</code><br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/新建仓库1.png" alt="enter description here"></p><h6 id="gitbash设置Github账号、邮箱、ssh-key连接"><a href="#gitbash设置Github账号、邮箱、ssh-key连接" class="headerlink" title="gitbash设置Github账号、邮箱、ssh key连接"></a><strong>gitbash设置Github账号、邮箱、ssh key连接</strong></h6><h5 id="账号、邮箱"><a href="#账号、邮箱" class="headerlink" title="账号、邮箱"></a>账号、邮箱</h5><p>打开Git Bash,填写账号信息,输入 <code>git config --global user.name &quot;yourname&quot;</code>(xxx代表你的用户名)<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/登陆账号.png" alt="enter description here"></p><p>接下来输入<code>git config --global uesr.email &quot;yourname@example.com&quot;</code>(填写你注册时候的邮箱)![enter <img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/登陆邮箱.png" alt="enter description here"></p><h5 id="ssh-key"><a href="#ssh-key" class="headerlink" title="ssh key"></a>ssh key</h5><p>查看C:\Users\用户 是否有 <code>.ssh</code>，如果有，就备份后删除。</p><p>打开GitBash输入<code>ssh key-gen -t rsa -C &quot;yourname@example.com&quot;</code> 生成密钥，后面出现的三个问题都回车。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/创建ssh密钥.png" alt="enter description here"></p><p>后面得到两个文件: id_rsa和id_rsa.pub, 打开id_rsa.pub文件, 复制里面的内容。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/创建ssh密钥1.png" alt="enter description here"></p><p>打开<a href="https://www.github.com" target="_blank" rel="noopener">github</a>, 登陆你的账号，点击右上角的下箭头，选择<strong>setting</strong>,找到<strong>SSH and GPG keys</strong>,点击<strong>New SSH key</strong>。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/设置sshkey.png" alt="enter description here"><br><strong>提示</strong>:添加ssh后，如果不知道ssh是否添加，可以在Git bash使用<code>ssh -t git@github.com</code>测试ssh是否成功添加,如果显示Hi,则代表你成功添加。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/验证ssh是否成功.png" alt="enter description here"></p><blockquote><p><strong>waring!!</strong><br>如果没有显示这则消息，那得重新弄一遍了。<br>在这之前，先把C:\User\用户 的.ssh删除。<br>github上的ssh密钥也需要清除。<br>接下来回到第二步–&gt;ssh</p></blockquote><h5 id="安装、创建hexo目录、上线博客"><a href="#安装、创建hexo目录、上线博客" class="headerlink" title="安装、创建hexo目录、上线博客"></a>安装、创建hexo目录、上线博客</h5><p>打开Git Bash, 进入你想要创建博客的文件夹位置, 例如 <code>cd d:/blog</code>,输入<code>npm install hexo -g</code>，开始安装hexo(这里本机已有hexo),输入 <code>hexo init</code>,开始初始化文件夹。<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/%E5%88%9D%E5%88%9B%E5%8D%9A%E5%AE%A2/%E5%88%9B%E5%BB%BAhexo.png" alt="enter description here"></p><p>完事之后，安装部署扩展 <code>npm install hexo-deployer-git --save</code><br>打开<code>d:\blog\_config</code>(配置文件)，找到deploy，修改配置如下:</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line"><span class="attribute">type</span>: git</span><br><span class="line"><span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:Luxonext/LwJ.git<span class="comment">//这个看下面</span></span><br><span class="line"><span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>repo不用写入上面那行，因为这个是别人的，要填写应该填写你自己的仓库地址。(个人推荐ssh，但需要你的本机ssh与github账户连接才行！)<br><img src="https://raw.githubusercontent.com/JsHz/jshz.github.io/master/images/blog/初创博客/自己的repo.png" alt="enter description here"></p><p>填写好后，我们可以先预览一下博客<code>hexo s</code>，没有大碍后可以写入public <code>hexo g</code></p><p>然后上线博客<code>hexo d</code><br><strong>优化与美化</strong>会在下一篇写出。</p>]]></content>
    
    <summary type="html">
    
      &lt;center&gt;&lt;font face=&quot;黑体&quot; color=&quot;#000000&quot; size=&quot;6&quot;&gt;初创博客&lt;/font&gt;&lt;br&gt;&lt;/center&gt;    

&lt;font face=&quot;黑体&quot; color=&quot;#000000&quot; size=&quot;5&quot;&gt;前言&lt;/font&gt;

&lt;p&gt;很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久&lt;s&gt;(但后来还是上线了嘛)&lt;/s&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="https://jshz.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://jshz.github.io/tags/Hexo/"/>
    
      <category term="NexT" scheme="https://jshz.github.io/tags/NexT/"/>
    
  </entry>
  
</feed>
