{"pages":[{"title":"404","text":"","path":"404/index.html","date":"04-11","excerpt":""},{"title":"search","text":"","path":"search/index.html","date":"04-11","excerpt":""},{"title":"tags","text":"","path":"tags/index.html","date":"04-11","excerpt":""},{"title":"关于我","text":"这里是Lnky的个人小站在2019年4月11日，这个特效网站出来了，在看到这个网站的UI时我觉得真的特好看（不是在hexo里面看到的），这个网站本来是 忧郁的弟弟 制作的UI，所以我非常敬佩他，感谢 忧郁的弟弟，同时也感谢制作这个hexo主题的博主 阿里嘎多！！！ 存放一般我会在这里放以前的学习记录与补充学习经验 前身我有一个 yilia 主题的局域网博客，现在更换成gal主题。公网网络安全组地址 : jshz","path":"about/index.html","date":"04-11","excerpt":""}],"posts":[{"title":"day02(基本数据类型1)","text":"前言python基础学习第二天 一、基本数据类型​ python的基本数据类型有： 整数、布尔值、字符串、列表、元组、字典、集合 int bool str list tuple dict set 1. 基本操作1234567temp = 'hello't = type(temp)print(t)str #👈 ctrl+左键 点击查看更多help(type(temp)) #可使用的命令具体显示d = dir(temp) #可使用的命令显示print(d) ​ 2.整型（int） 123456789# 整型inta = 88 # 十进制 # a的数据类型是： &lt;class 'int'&gt;b = 0b1110 # 二进制c = 0o57 # 八进制d = 0xa5c # 十六进制print(f'a的数据类型是： &#123;type(a)&#125;\\nb的数据类型是： &#123;type(b)&#125;\\nc的数据类型是： &#123;type(a)&#125;\\nd的数据类型是： &#123;type(a)&#125;\\n')#tips: 32位机器：-2**31~2**31-1；64位：-2**63~2**63-1 整数类型，理论取值范围[-无穷，+无穷], 实际取值范围受限于运行的计算机的内存大小。 3.浮点数（float）12345678a = 0.0b = 75.c = -3.1415926d = 9.8e-2s = 0.1 + 0.2print(s) # 0.30000000000000004print(f's的类型是：&#123;type(s)&#125;\\n')print(f'a的数据类型是： &#123;type(a)&#125;\\nb的数据类型是： &#123;type(b)&#125;\\nc的数据类型是： &#123;type(a)&#125;\\nd的数据类型是： &#123;type(a)&#125;\\n') ​ 课外扩展 1234567# decimal 3.141592696532441*1.23456789import decimala = decimal.Decimal(3.141592696532441)b = decimal.Decimal(1.23456789)decimal.getcontext().prec = 20 # 精确位数print(f'&#123;a * b&#125;\\n') # 3.8785094665974659284 4.复数（complex）123456a = 12.3 + 4jprint('a的数据类型是：', type(a))print(a.real) #实数print(a.imag) #虚数print('='*20)print('\\n') int, float, complex的互相转换123456789101112131415161718192021222324252627282930a = 2b = 3.14c = '2'print(f'a的类型是： &#123;type(a)&#125;\\nb的类型是： &#123;type(b)&#125;\\nc的类型是： &#123;type(c)&#125;\\n')# 转化为整数d = int(b)e = int(c)print(d)print(e)print(f'd的类型是：&#123;type(d)&#125;\\ne的类型是：&#123;type(e)&#125;\\n')# 转化为浮点数f = float(a)g = float(c)print(f)print(g)# 转换复数a = 2b = 3.14c = '2'h = complex(a, b) # 两个参数时，前后都不允许有字符串，否则包错i = complex(b, c) j = complex(c) # 只有单个参数时，才可以使用字符串类型的数字print(h) # (2 + 3.14j)print(i) # (3.14+2j)print(j) # (2+0j)print(type(h)) 5.布尔值 bool: True 和 False1234567891011# 变量初始化a = 2b = 3.14c = '5'd = 0e = \"\"f = Falseg = Noneprint(f'a的布尔值是： &#123;bool(a)&#125;\\nb的布尔值是： &#123;bool(b)&#125;\\nc的布尔值是： &#123;bool(c)&#125;\\nd的布尔值是： &#123;bool(d)&#125;\\n' f'e的布尔值是： &#123;bool(e)&#125;\\nf的布尔值是： &#123;bool(f)&#125;\\ng的布尔值是： &#123;bool(g)&#125;\\n' f'h的布尔值是： &#123;bool(h)&#125;\\ni的布尔值是： &#123;bool(i)&#125;\\nj的布尔值是： &#123;bool(j)&#125;\\n') 6.字符串str12345678910111213141516171819202122字符串str# 变量初始化a = '你好'b = \"hello,world\"c = '''hello,TZ'''d = \"\"\"hello,FF\"\"\"e = \"\"\" 红豆生南国， 春来发几枝？ 愿君多采撷， 此物最相思。 \"\"\"f = ''' 床前明月光， 疑是地上霜。 举头望明月， 低头思故乡。 '''print(f'a： &#123;a&#125;\\nb： &#123;b&#125;\\n' f'c： &#123;c&#125;\\nd： &#123;d&#125;\\n' f'e： &#123;e&#125;\\nf： &#123;f&#125;\\n') 7.（capitalize，center，count，索引，len，切片）12345678910111213141516171819202122print('a的数据类型：', type(a))print(b.capitalize()) #开头大写print(a.center(20, '*')) #居中，若有空白就是用 * 填充# S.count(sub[, start[, end]]) -&gt; intb = \"hello,world\"print(b.count(\"l\")) # 3 是在整个字符串里面有 3 个 lprint(b.count('l', 3)) # 2 是在前三个数（0 - 3)里面找 l ， 有 2 个print(b.count('l', 3, 8)) # 1 在(4 - 8）找 l , 有一个# 索引取值s = 'hello,TZ' #h(0) e(1) l(2) l(3) o(4) ,(5) T(6) Z(7)print(s[0])# 长度len()print(len(s))# 切片# 切片：变量[头下标：尾下标]，不包含尾下标（包头不包尾）print(s[0:2]) #heprint(s[1:4]) #ellprint('这里是：', s[4:1]) # 不能交叉取值， 所以为空值 字符串-功能集","path":"2019/06/14/day2/","date":"06-14","excerpt":"前言python基础学习第二天","tags":[{"name":"python","slug":"python","permalink":"https://blog.jshz.top/tags/python/"}]},{"title":"day01(开学典礼)","text":"前言参加了潭州课堂的python培训加老师微信需要真实姓名, 班期, 学号/账号(我不是打广告哇) 上课时间：周一二，四五八点到八点半 是解答时间 八点半到十点半 是正式课 ​ ==周三，周六== 八点半 是解答课 课程已经在Python入门基础班的章节信息 学习方法多写代码多记笔记 上课的问题标记 思考-&gt;解决-&gt;不行就百度，再不行就提问 Python学院学习环境:https://pan.baidu.com/s/1DerN9l6auNwe0bMGsrDoJA 提取码：3i68 tips: 基础班大部分在windows系统完成，虚拟机先可以不需要 python首选使用pycharm,如果电脑不行，python有自带shell，可以使用 环境安装python添加环境 pycharm免费使用 xshell家庭学生免费使用 虚拟机使用vbox，然后镜像是潭州的乌班图 远程连接使用向日葵","path":"2019/06/13/day1/","date":"06-13","excerpt":"前言参加了潭州课堂的python培训加老师微信需要真实姓名, 班期, 学号/账号(我不是打广告哇)","tags":[{"name":"python","slug":"python","permalink":"https://blog.jshz.top/tags/python/"}]},{"title":"网络欺骗攻击","text":"前言计算机系统及网络的信息安全在越来越先进的社会中越来越凸显地位，在我国，这一问题已引起各方面的高度重视，在与入侵者周旋的过程中，有一种有效的信息安全技术正渐渐进入人们的视野中，这就是网络安全欺骗。 0x1 ARP欺骗ARP（地址解析协议）是在仅知道主机的IP地址是确定其物理地址的一种协议。局域网的网络流通不是根据IP进行，而是按照MAC地址进行传输。 比如局域网内 0x1.1（单向欺骗）A的地址为[IP：10.164.27.30 MAC：AA-AA-AA-AA-AA-AA]B的地址为[IP：10.164.27.40 MAC：BB-BB-BB-BB-BB-BB]C的地址为[IP：10.164.27.50 MAC：CC-CC-CC-CC-CC-CC] A与C进行通信，但是B向A发送了一个自己伪造的 ARP应答，而这个应答中的数据为发送方，IP是 10.164.27.50（C的IP），MAC是BB-BB-BB-BB-BB-BB。（C的MAC本来是CC-CC-CC-CC-CC-CC，这里被伪造了）。当A接收到B的伪ARP应答是，就会更新本地缓存了（A就被欺骗了），B也变成 “C” 了。A与C之间通信的数据就会经过B，B完全可以知道他们之间说了什么，这就是ARP欺骗过程。 掐断A与C之间的通信：B向A发送一条ARP数据包，内容为：C的地址是00:00:00:00:00:00（一个错误的地址），但要注意了，这里只是 A发送给C中断了，C发送给A并没有中断，所以这个叫单向欺骗。 0x1.2（双向欺骗）A与C正常通信，然后B对A说我才是 C，又对C说我才是 A，这样把A和C的ARP缓存表全部修改了。以后的通信过程就是A把数据发给B，B再发送给C；C数据发送给B，B再发送给A。 0x1.3 怎么应对ARP欺骗主机的情况？我们可以使用ARPkiller 的 “Sniffer 杀手” 扫描整个局域网IP段，然后查找处于 “混杂” 模式下的计算机，就可以发现对方了。检测完成后，如果相应的IP是绿帽子图标，说明整个IP处于正常模式，如果是红帽子图标，则说明网卡处于混杂模式，它就是我们的目标，也就是他在用网络执法官捣乱。 0x1.4 DNS欺骗如果可以冒充域名服务器，然后把查询的IP地址设为攻击者的IP地址，用户上网就只能看到攻击者的主页，而不是自己想要取得的网页的主页了，这就是DNS欺骗的基本原理。DNS欺骗其实并不是真的“黑掉”了对方的网站，只是冒名顶替，招摇撞骗罢了。 把攻击这的计算机设成目标域名的代理服务器。这样，外界进入目标的计算机的数据流在黑客的监视之下，黑客可以任意窃听甚至修改数据流里的数据，从而收集大量信息，和IP欺骗相似。 DNS无法在Internet上实现欺骗，只在局域网上有效果。 0x1.5 Web欺骗Web是一种电子信息欺骗，也算障眼法，攻击者复制一个相似的网页与域名，如果眼神不好，在一个相似的网页输入隐私信息与个人账户和密码，就会被后台的黑客所截获到，从而信息泄露。 通常使用这种手段的有引诱，障眼，推荐链接。 实例:引诱全国最大交友网站，快，顶不住了！填写你的信息,以获得大礼包一份姓名：[ ]性别：[ ]住址：[ ] 不要轻易相信这些奇怪的字眼与网站 障眼本来是 https://www.bing.com 的域名，黑客可能会改成www.bing.top 、 www.bimg.com 复制网页一份然后造成障眼，从而获取信息 在进入网页的时候要看到左下角的 js 提示网页，在进入网页的时候要注意有没有输错。 推荐链接推荐链接一般来自好友之间和邮件 0x1.6 网络钓鱼攻击的预防在日常中预防钓鱼攻击，我们应该做到如下几点： 不轻易在网上留下自己身份的任何资料，包括手机号码、身份号、银行号 不要通过网络传输自己的隐私资料，包括手机号码、身份号、银行号 不要轻易相信网上的信息，除非得到了权威的证明。否则千万不要相信别人所传播的谣言 不要在网站注册时透露自己的真实资料，例如，住址、电话、自己的银行卡号 如果涉及金钱交易和商业合同，不要仅仅通过网络完成，有心的骗子可能通过这种途径了解用户的资料。 不要轻易相信电子邮箱、网络论坛等发布的中奖信息、促销信息等，除非得到了另外途径的证明。因为正规的公司一般不会通过电子邮件给用户发送中奖信息和促销信息的。 对电脑进行网络安全防范措施。一是安装防火墙和防病毒软件，并经常升级。二是给系统打补丁，三是禁止浏览器运行Javascript 和 Active 代码，四是不要从网上下载未知来源的软件等。五是提高自我保护意识，不轻易连接公共场所的wifi和商业服务。","path":"2019/03/06/网络欺骗攻击/","date":"03-06","excerpt":"前言计算机系统及网络的信息安全在越来越先进的社会中越来越凸显地位，在我国，这一问题已引起各方面的高度重视，在与入侵者周旋的过程中，有一种有效的信息安全技术正渐渐进入人们的视野中，这就是网络安全欺骗。","tags":[{"name":"Web","slug":"Web","permalink":"https://blog.jshz.top/tags/Web/"}]},{"title":"Netstat","text":"前言记录Netstat 了解网络连接的Netstat命令Netstat是一个监控TCP/IP 网络非常有用的工具，可以显示路由表、实际的网络连接，以及每一个网络接口的状态信息，从而知道哪些网络连接正在运作。 Netstat可显示与 IP、TCP、ICMP 协议相关的统计数据，一般用于检验本机端口的网络连接情况。 计算机有时候接收到的数据报导致出错数据或故障，对此不必感到奇怪，TCP/IP 可以容易允许这些类型的错误并自动重发数据报。但如果累计出错的数目占所接收到的IP数据报相当大的百分比，或者他的数目正在迅速增加，就应该使用Netstat查一查为什么会出现这些情况了。 一般用”netstat -na”命令来显示所有连接的端口并用数字表示。 0x1 参数说明12345678-a: 显示所有活动的 TCP 连接及连接计算机侦听的 TCP 端口和 UDP 端口。-e: 显示以太网 统计信息，如发送和接收的字节数、数据包数。-n: 显示活动的 TCP 连接，但只以数字形式表现地址和端口号，而不确定名称。-o: 显示活动的 TCP 连接并包括每个连接的进程ID(PID).可在Windows任务管理器 \"进程\" 选项卡上找到基于PID的应用程序。该参数可以与-a、-n和-p结合使用。-p: portocol:显示 Protocol 所指定的协议的连接。在这种情况下，Protocol 可以是 TCP、UDP、TCPV6或UDPV6。-s: 按协议显示统计信息。默认情况下，显示TCP、UDP、ICMP 和 IP协议的统计信息。-r: 显示 IP路由表 的内容。该参数与 route print 命令等价。Interval: 每隔 Interval 秒重新显示一次选定的信息。按 \"Ctrl+C\" 组合键可以停止重新显示统计信息。如果省略该参数，Netstat 将只打印一次选定的信息。 语法例子: netstat [-a] [-e] [-n] [-o] [p Protocol] [-r] [-s] 结合上面测试指令吧!!!👆 0x2 典型示例Netstat 命令可显示活动的 TCP 连接、计算机侦听的端口、以太网统计信息、IP 路由表、IPV4 统计信息(对于IP、 ICMP、TCP 和 UDP 协议）以及IPV6 统计信息（对于IPV6、ICMPV6、通过 IPV6 的 TCP 以及通过 IPV6 的UDP协议)。使用时如果不带参数、Netstat将显示活动的 TCP 连接。 下面使用几个 Netstat 的命令的应用实例，如下(1) 显示本机所有活动的 TCP 连接，以及计算机侦听的 TCP 和 UDP 端口，则输入”netstat -a” 命令。 1234C:\\Users\\Administrator&gt;netstat -a活动连接 协议 本地地址 外部地址 状态 TCP 0.0.0.0:80 4L8NNGD38J28N3DNA:0 LISTENING (2)显示服务器活动的 TCP/IP 连接，则应输入 “netstat -n“ 命令或 “netstat“( 不带任何参数 ) 命令。 (3)显示以太网和所有协议的统计信息，则应输入 “netstat -s -e“ 命令。 (4)检查路由表确认路由配置i情况，则应输入 “netstat -rn“ 命令","path":"2019/03/04/Netstat记录/","date":"03-04","excerpt":"前言记录Netstat","tags":[{"name":"TCP/IP","slug":"TCP-IP","permalink":"https://blog.jshz.top/tags/TCP-IP/"}]},{"title":"Windows注册表","text":"前言在注册表，用户可以添加、删除、修改系统内的软件配置信息或硬件驱动程序，这样就大大方便提升了用户对软、硬件的工作状态进行相应调整。对于黑客来讲，注册表是他们发挥的最大用途之地，例如种植木马，删除硬件信息。 0x1 注册表根项名称和作用 根项名称 作用 HKEY_LOCAL_MACHINE 包括关于本地计算机系统的信息，以及硬件和操作系统数据，如总线类型、系统内存、设备驱动程序和启动控制数据 HKEY_CLASSES_ROOT 包括由各种OLE技术使用的信息和文件类别关联数据。如果在”HKEY_CURRENT_USER\\SOFTW ARE\\Classes”中存在某个键或值，则对应键或值将出现在HKEY_CLASSES_ROOT中 HKEY_CURRENT_USER 包括当前登陆用户的配置文件，如环境变量、桌面设置、网络连接、打印机和程序首选项。这些信息与用户的配置文件相关联 HKEY_USERS 包括关于动态加载的用户配置文件和默认的配置文件的信息。这包含同时出现在HKEY_CURRENT_USER中的信息 HKEY_CURRENT_CONFIG 包含在启动时由本地计算机系统使用的硬件配置文件的相关信息 虽然在注册表中5个根项看上去处于一种并列地位，彼此毫无关系。但事实上，HKEY_CLASSES_ROOT 和 HKEY_CURRENT_CONFIG 中存放的信息，都是HKEY_LOCAL_MACHINE 中存放的信息的一部分；而HKEY_CURRENT_USER中存放的信息，只是HKEY_USERS中存放的信息的一部分。HKEY_LOCAL_MACHINE 包括 HKEY_CLASSES_ROOT 和 HKEY_CURRENT_USER 中的所有信息。Windows 当前定义和使用的数据类型如表所示 0x2 当前定义和使用的数据类型 名称 数据类型 作用 二进制 REG_BINARY 原始二进制数据，大多数硬件组件信息作为二进制数据存储，以十六进制的格式显示在注册表编辑器中 DWORD 值 DWORD 以4字节长（32位整数）的数字表示数据。设备驱动程序和服务的许多参数都是此类型，以二进制、十六进制、和十进制格式显示在注册表编辑器中。与之有关的值是DWORD_LITTLE_ENDIAN（最重要的字节在最低位地址）和REG_FWORD_BIG_ENDIAN（最不重要的字节在最高位地址） 可扩展字符串值 REG_EXPAND_SZ 长度可变的数据字符串，这种数据类型包括程序或服务使用该数据时解析的变量 多字符串值 REG_MULTI_SZ 包含用户可以阅读的列表或多个值，各条目之间用空格、逗号或其他标记分隔 字符串值 REG_SZ 长度固定的文本字符串 二进制值 REG_RESOURCE_LIST 为一系列嵌套的数组，用于存储硬件设备驱动程序或其他控制的某个物理设备所有使用的资源列表 二进制值 REG_RESOURCE_REQUIREMENTS_LIST 一系列嵌套的数组，用于存储一个设备驱动程序（或其控制的某个物理设备）可以使用的硬件资源列表 二进制值 REG_FULL_RESOURCE_DESCRIPTOR 一系列嵌套的数组，用于存储物理硬件设备使用的资源列表 无 REG_NONE","path":"2019/03/04/Windows注册表/","date":"03-04","excerpt":"前言在注册表，用户可以添加、删除、修改系统内的软件配置信息或硬件驱动程序，这样就大大方便提升了用户对软、硬件的工作状态进行相应调整。对于黑客来讲，注册表是他们发挥的最大用途之地，例如种植木马，删除硬件信息。","tags":[{"name":"regedit","slug":"regedit","permalink":"https://blog.jshz.top/tags/regedit/"}]},{"title":"工作组和域的Net命令","text":"前言记录Net命令的学习过程 0x1 Net命令介绍Net 命令是一种基于网络的命令，包括了管理网络环境、服务、用户、登陆等大部分重要的管理功能。常见的 Net 子命令有 net view、net user、net use、net start、net stop、net share等，下面来一一介绍嗷。 1x1 net view作用：显示域列表、计算机列表或指定计算机的共享资源列表。命令格式：net view [\\\\ComputerName] [/domain[:DomainName]] \\\\Computer: 指定要查看其共享资源的计算机名称。/domain[:Domainname]: 指定要查看其可用计算机的域 输入不带参数的 net view，就会显示当前域的计算机列表。实例:net view 127.0.0.1 1x2 net user作用：添加或更改用户账号或显示用户账号信息。该命令也可以写为 net users。命令格式：net user Administrator Administrator 修改已有账号信息输入不带参数的 net user:查看计算机上的用户账号列表。 1x3 net use作用：连接计算机或者断开计算机的共享资源连接，或显示计算机的连接方式 参数介绍：输入不带参数的 net use 查看网络连接 1x4 net start作用：启动服务或显示已启动服务的列表实例：net start server不带参数则显示已启动服务 1x5 net stop作用与上面的 net start 相反 1x6 net share作用：创建、删除或显示共享资源。不带任何参数的 net share 命令： 显示本地计算机上所有共享资源的信息详细请看下面👇Sharename: 共享资源的网络名称drive:path: 指定共享目录的绝对路径。/user:number: 设置可以同时访问共享资源的最大用户数。/unlimited: 不限制同时访问共享资源的用户数。/remark:”test”: 添加关于资源的注释，注释文字用引号引住。","path":"2019/03/04/工作组和域的 Net 命令/","date":"03-04","excerpt":"前言记录Net命令的学习过程","tags":[{"name":"net","slug":"net","permalink":"https://blog.jshz.top/tags/net/"}]},{"title":"Hexo本地服务器创建","text":"前言想方便的设置局域网的个人博客嘛，比设置公网的个人博客简单实用，但还是放个链接吧👇设置公网个人博客 0x1 需要的软件 需要使用的工具:node.jsgit bashHexo 0x2 创建过程打开GitBash，进入你想要存放博客的文件夹，安装Hexo插件:npm install hexo -g 然后初始化文件夹:hexo init 开始下载yilia的主题(主题可选，都行的)：git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia，然后打开站点根目录的_config.yml，找到theme，把原来的主题修改成yilia。 输入hexo clean清楚内存、hexo g更新本地、hexo server -i IP设置你的局域网IP完成。 创建文章：打开GitBash，进入你的站点根目录，输入：hexo new page，就会新建一篇文章，也可以自己在站点根目录文件夹打开source，然后进入_posts新建一个page.md写入文章。 0x03 番外篇个人推荐编写文章的编译器:Markdown 、小书匠 优化与美化可以看DevinZ的，这里就不介绍了。","path":"2019/02/18/内网hexo/","date":"02-18","excerpt":"前言想方便的设置局域网的个人博客嘛，比设置公网的个人博客简单实用，但还是放个链接吧👇设置公网个人博客","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.jshz.top/tags/Hexo/"}]},{"title":"Linux系统管理","text":"前言在linux中的每一个文件或目录都包括有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。 0x1 过程r(Read - 读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览目录的权限w(Write - 写入)：对文件而言，具有新增、修改文件内容的权限；对目录来说，具有删除、移动目录内文件的权限。x(eXecute - 执行)：对文件而言，具有执行文件的权限；对目录来说该用户具有进入目录的权限。 -(表示不具有该项的权限) 0x2 权限举例-rwx——：文件所有这对文件具有读取、写入和执行的权限。-rw-rw-r-x：文件所有这与同组用户对文件具有读写的权限，而其他用户仅具有读取和执行的权限。drwx–x–x：目录所有着具有读写与进入目录的权限、其他用户可以进入该目录，却无法读取任何数据。Drwx——：除了目录所有者具有完整的权限之外，其他用户对该目录完全没有任何权限。 0x3 特殊权限文件目录权限不止这些，还有所谓的特殊权限。由于特殊权限会拥有一些“特权”，因为用户若无特殊需求，不应该启用这些权限，避免安全方面出现严重漏洞，造成黑客入侵，甚至摧毁系统！！！ s或S(SUID, Set UID)：可执行的文件搭配这个权限，便能获得特权，任意获取该文件的所有者能使用的全部系统资源。所以请注意拥有SUID权限的文件，SUID配root，那就是黑客的任意门 s或S(SGID, Set GIT)：设置在文件上面，其效果与SUID相同，只不过将文件所有者换成用户组，该文件就可以任意存取整个用户组所能使用的系统资源。 t或T(Sticky)：/tmp和/var/tmp目录共所有用户暂时存取文件，就是每位用户皆拥有完整的权限进入该目录，去浏览、删除和移动文件。 对于特殊权限，最好不要设置，不然会带来很严重的安全问题。当然，在这里你也可以改变文件和目录的所有者和所有属。 0x4 详细权限说明文件和目录的权限表示，使用rwx这三个字符来代表所有者、用户组和其他用户的权限。有时候，字符似乎过于麻烦，因此还有另外一种方法就是以数学来表示权限，而且仅需三个数字。 r：对应数值4w：对应数值2x：对应数值1-：对应数值0 数字设定的关键是mode的取值，一开始许多初学者会被搞糊涂，其实很简单，我们将rwx看成二进制数，如果有则有1表示，没有则有0表示，那么rwx r-x r–则可以表示成为：111 101 100再将其每三位转换成为一个十进制数，就是754.例如，我们想让a.txt这个文件的权限为： 自己 同组用户 其他用户可读 是 是 是可写 是 是可执行 那么，我们先根据上表得到权限串为：rw-rw-r–， 那么转换成二进制数就是110 110 100， 再每三位转换成为一个十进制数，就得到664，因此我们执行命令： 1[root@localhost~]# chmod 666 a.txt 按照上面的规则，rwx合起来就是4 + 2 + 1 = 7，一个rwxrwxrwx权限全开放的文件，数值表示为777；而完全不开放权限的文件 “- - - - - - - - -“ 其数字表示为000。 教程转载panyun(有修改)若有侵权，请联系我，我会立刻删除","path":"2019/02/13/Linux文件管理/","date":"02-13","excerpt":"前言在linux中的每一个文件或目录都包括有访问权限，这些访问权限决定了谁能访问和如何访问这些文件和目录。","tags":[{"name":"Linux","slug":"Linux","permalink":"https://blog.jshz.top/tags/Linux/"}]},{"title":"优化与美化","text":"前言总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。 这里借鉴了几个例子 Alvabill-NexT博客全优化与美化 个性化NexT主题美化 wenbo星空–NexT主题美化(我的主题NexT的美化) yalia主题优化与美化 yalia主题添加阅读量 NexT主题添加背景动态线条 结尾总配置是blog\\_config,而主题配置在blog\\themes\\主题\\_config! 主题配置在theme/next/_config里面 个人觉得yalia主题很好看，自己的博客稀里糊涂的使用了NexT主题搭建，到时候应该也会改成yalia主题的！","path":"2019/02/07/优化与美化/","date":"02-07","excerpt":"前言总所周知，网站浏览度在于看的人多不多，网站美化好了，自然多人来看。","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.jshz.top/tags/Hexo/"}]},{"title":"初创博客经验","text":"前言很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久(但后来还是上线了嘛) 博客创建过程(windows) 本咸鱼是使用hexo + github搭建的博客,踩坑过多，故出此与记。 (会的大佬可以直接跳过) 需要使用的工具:node.jsgit bashHexo 大概过程 注册github账号，然后创建仓库 获得ssh，并且使用github账号连接上ssh 安装hexo,并创建hexo init目录, 设置hexo与github关联 上线博客 注册githut账号，创建仓库(图不一样，仅供参考) 进入github官网,注册与登陆账号后，新建一个仓库 create a repository仓库名字要和用户名正确,例如我的是jshz,仓库名字就是jshz.github.io gitbash设置Github账号、邮箱、ssh key连接账号、邮箱打开Git Bash,填写账号信息,输入 git config --global user.name &quot;yourname&quot;(xxx代表你的用户名) 接下来输入git config --global uesr.email &quot;yourname@example.com&quot;(填写你注册时候的邮箱) ssh key查看C:\\Users\\用户 是否有 .ssh，如果有，就备份后删除。 打开GitBash输入ssh key-gen -t rsa -C &quot;yourname@example.com&quot; 生成密钥，后面出现的三个问题都回车。 后面得到两个文件: id_rsa和id_rsa.pub, 打开id_rsa.pub文件, 复制里面的内容。 打开github, 登陆你的账号，点击右上角的下箭头，选择setting,找到SSH and GPG keys,点击New SSH key。提示:添加ssh后，如果不知道ssh是否添加，可以在Git bash使用ssh -t git@github.com测试ssh是否成功添加,如果显示Hi,则代表你成功添加。 waring!!如果没有显示这则消息，那得重新弄一遍了。在这之前，先把C:\\User\\用户 的.ssh删除。github上的ssh密钥也需要清除。接下来回到第二步–&gt;ssh 安装、创建hexo目录、上线博客打开Git Bash, 进入你想要创建博客的文件夹位置, 例如 cd d:/blog,输入npm install hexo -g，开始安装hexo(这里本机已有hexo),输入 hexo init,开始初始化文件夹。 完事之后，安装部署扩展 npm install hexo-deployer-git --save打开d:\\blog\\_config(配置文件)，找到deploy，修改配置如下: 1234deploy: type: git repo: git@github.com:Luxonext/LwJ.git //这个看下面 branch: master repo不用写入上面那行，因为这个是别人的，要填写应该填写你自己的仓库地址。(个人推荐ssh，但需要你的本机ssh与github账户连接才行！) 填写好后，我们可以先预览一下博客hexo s，没有大碍后可以写入public hexo g 然后上线博客hexo d优化与美化会在下一篇写出。 tips:如果hexo d无效，.git 部署什么的话尝试一下 npm install hexo-deployer-git –save因为有时候有些命令维护不能使用，或者更新之后无法找到。 如果是ssh问题建议重新弄一遍ssh 如果是主题问题要仔细看主题作者给出的文档","path":"2018/01/20/创建博客踩坑经验/","date":"01-20","excerpt":"前言很久之前，就打算开始弄一个与搭档的博客，由于技术问题，一直鸽了很久(但后来还是上线了嘛)","tags":[{"name":"Hexo","slug":"Hexo","permalink":"https://blog.jshz.top/tags/Hexo/"},{"name":"NexT","slug":"NexT","permalink":"https://blog.jshz.top/tags/NexT/"}]}]}